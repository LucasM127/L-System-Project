#ifndef BUILDING_COORDS_HPP
#define BUILDING_COORDS_HPP

#include <SFML/System/Vector2.hpp>
#include <vector>
#include <string>

const float BUILDING_TILE_SIZE = 64;
const std::string BUILDING_TILE_SOURCE = "BuildingTiles256x128.png";

unsigned int BUILDING_TILEMAP_WIDTH = 32;
unsigned int BUILDING_TILEMAP_HEIGHT = 32;

const sf::Vector2f TEX2D_BUILDING_SKY        = {  0,  0};
const sf::Vector2f TEX2D_BUILDING_SMALL_ROOF = { 64,  0};
const sf::Vector2f TEX2D_BUILDING_BIG_ROOF   = {128,  0};
const sf::Vector2f TEX2D_BUILDING_BRICKS     = {192,  0};
const sf::Vector2f TEX2D_BUILDING_ROCKS      = {  0, 64};
const sf::Vector2f TEX2D_BUILDING_WINDOW     = { 64, 64};
const sf::Vector2f TEX2D_BUILDING_GRASS      = {128, 64};
const sf::Vector2f TEX2D_BUILDING_WOOD       = {192, 64};

const std::vector<sf::Vector2f> texIDMapping =
{
    {0,0},//filler
    TEX2D_BUILDING_SKY,
    TEX2D_BUILDING_SMALL_ROOF,
    TEX2D_BUILDING_BIG_ROOF,
    TEX2D_BUILDING_BRICKS,
    TEX2D_BUILDING_ROCKS,
    TEX2D_BUILDING_WINDOW,
    TEX2D_BUILDING_GRASS,
    TEX2D_BUILDING_WOOD
};

const std::vector<char> collideIDMapping = 
{
    0,//filler
    1,
    1,
    0,
    0,
    1,
    1,
    1,
    1
};

//copied from Tiled... (may integrate tmx lite or such program another time)
const std::vector<unsigned int> BUILDING_TILE_IDS = 
{
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,6,6,6,4,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,4,4,4,
1,1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,4,4,4,
1,1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,4,4,4,
1,1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,4,4,4,4,
1,1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,8,8,8,8,8,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,8,8,8,8,8,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,8,8,8,8,8,4,4,4,
1,1,1,1,1,1,1,4,4,4,6,6,6,6,6,4,4,6,6,6,6,6,4,4,8,8,8,8,8,4,4,4,
1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,4,4,4,
7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,4,4,4,
7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,4,4,4,
7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,4,4,4,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,7,7,7
};

#endif //BUILDING_COORDS_HPP